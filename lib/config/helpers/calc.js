"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// Generated by CoffeeScript 2.5.1
(function () {
  var $$calcBuilder, Result, calc;
  Result = require('../../result');
  calc = require('../../tags/_calc');

  $$calcBuilder = function $$calcBuilder(fields) {
    var $$calc, cache, noCache;
    cache = Object.create(null);

    noCache = function noCache(result, expr, options) {
      var localResult, r;

      if (!(_typeof(result) === 'object' && result !== null && result.hasOwnProperty('isError'))) {
        options = expr;
        expr = result;
        localResult = true;
        result = new Result();
      }

      r = calc(result, fields, expr, options);

      if (localResult) {
        result.throwIfError();
      }

      return r; // noCache =
    };

    $$calc = function $$calc(result, expr, options) {
      var cacheExpr;
      cacheExpr = _typeof(result) === 'object' && result !== null && result.hasOwnProperty('isError') ? expr : result;

      if (hasOwnProperty.call(cache, cacheExpr)) {
        return cache[expr];
      }

      return cache[expr] = noCache(result, expr, options); // res.$$calc =
    };

    $$calc.noCache = noCache;
    return $$calc; // (fields) ->
  }; // ----------------------------


  module.exports = $$calcBuilder;
}).call(void 0);