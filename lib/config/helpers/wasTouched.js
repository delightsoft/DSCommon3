"use strict";

// Generated by CoffeeScript 2.5.1
(function () {
  var $$wasTouchedBuilder, invalidArg, invalidOption, unknownOption;

  var _require = require('../../utils/_err');

  invalidArg = _require.invalidArg;
  invalidOption = _require.invalidOption;
  unknownOption = _require.unknownOption;

  $$wasTouchedBuilder = function $$wasTouchedBuilder(fieldsDesc) {
    var checks, fieldDesc, fieldName;

    checks = function () {
      var results;
      results = [];

      for (fieldName in fieldsDesc) {
        fieldDesc = fieldsDesc[fieldName];

        if (~['structure', 'subtable'].indexOf(fieldDesc.type)) {
          results.push(function (name, fields) {
            if (fieldDesc.type === 'structure') {
              return function (fieldsLevel) {
                return fields.$$wasTouched(fieldsLevel[name]);
              };
            } else {
              return function (fieldsLevel) {
                var i, len, ref, row;
                ref = fieldsLevel[name];

                for (i = 0, len = ref.length; i < len; i++) {
                  row = ref[i];

                  if (fields.$$wasTouched(row)) {
                    return true;
                  }
                }

                return false; // (fieldsLevel) ->
              };
            }
          }(fieldDesc.name, fieldDesc.fields));
        }
      }

      return results;
    }();

    return function (fieldsLevel) {
      // (fieldsDesc) ->
      var check, i, key, len;

      if (!fieldsLevel.hasOwnProperty('$$touched')) {
        return true;
      } else {
        for (key in fieldsLevel.$$touched) {
          return true;
        }

        for (i = 0, len = checks.length; i < len; i++) {
          check = checks[i];

          if (check(fieldsLevel)) {
            return true;
          }
        }
      }

      return false; // (fieldsLevel) ->
    };
  }; // ----------------------------


  module.exports = $$wasTouchedBuilder;
}).call(void 0);