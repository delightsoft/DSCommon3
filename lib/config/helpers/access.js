"use strict";

// Generated by CoffeeScript 2.5.1
(function () {
  var $$accessBuilder, freezeBitArray;

  freezeBitArray = function freezeBitArray(ba) {
    ba.list;
    return ba; // (ba) ->
  };

  $$accessBuilder = function $$accessBuilder(type, fieldsProp, access, addActions) {
    if (typeof access === 'function') {
      // TODO: Wrap and check result
      return function (fields) {
        var r;
        r = access.apply(this, arguments); // (type, fieldsProp, access) ->

        if (addActions) {
          r.view = freezeBitArray(r.view ? r.view.or(type[fieldsProp].$$calc('#system-options', {
            strict: false
          })) : type[fieldsProp].$$tags.all);
          r.update = freezeBitArray(r.update ? r.update.or(type[fieldsProp].$$calc('id,rev,deleted', {
            strict: false
          })) : type[fieldsProp].$$tags.all);

          if (!r.required) {
            r.required = freezeBitArray(r.required || type[fieldsProp].$$tags.required);
          }

          if (!r.actions) {
            r.actions = type.actions.$$tags.all;
          }
        } else {
          if (!r.view) {
            r.view = type[fieldsProp].$$tags.all;
          }

          if (!r.update) {
            r.update = type[fieldsProp].$$tags.all;
          }
        }

        return r; // (fields) ->
      };
    } else {
      return function () {
        var allAccess;
        allAccess = {
          view: type[fieldsProp].$$calc('#all-options', {
            strict: false
          }),
          update: type[fieldsProp].$$calc('(#all-#system),id,rev,deleted', {
            strict: false
          })
        };

        if (addActions) {
          allAccess.required = type[fieldsProp].$$tags.required;
          allAccess.actions = type.actions.$$tags.all;
        }

        return function (doc) {
          return allAccess; // (type, fieldsProp, access) ->
        };
      }();
    }
  }; // ----------------------------


  module.exports = $$accessBuilder;
}).call(void 0);