"use strict";

// Generated by CoffeeScript 2.5.1
(function () {
  var $$accessBuilder, freezeBitArray, _modify;

  freezeBitArray = function freezeBitArray(ba) {
    return ba._buildList().lock(); // (ba) ->
  };

  _modify = function modify(body) {
    var access, r, ref, required, update, view;
    view = r.view.clone();
    update = r.update.clone();
    required = r.required.clone();
    access = (ref = r.access) != null ? ref.clone() : void 0;
    body(view, update, required, access);
    r = {
      view: view.lock(),
      update: update.lock(),
      required: required.lock(),
      access: access != null ? access.lock() : void 0
    };
    r.modidy = _modify;
    return r;
  };

  $$accessBuilder = function $$accessBuilder(type, fieldsProp, access, addActions) {
    var res; // TODO: Wrap and check result

    res = typeof access === 'function' ? function (fields) {
      var r;
      r = access.apply(this, arguments); // (type, fieldsProp, access) ->

      if (addActions) {
        r.view = freezeBitArray(r.view ? r.view.or(type[fieldsProp].$$calc('#system-options', {
          strict: false
        })) : type[fieldsProp].$$tags.all);
        r.update = freezeBitArray(r.update ? r.update.or(type[fieldsProp].$$calc('id,rev,deleted', {
          strict: false
        })) : type[fieldsProp].$$tags.all);

        if (!r.required) {
          r.required = freezeBitArray(r.required || type[fieldsProp].$$tags.required);
        }

        if (!r.actions) {
          r.actions = type.actions.$$tags.all;
        }
      } else {
        if (!r.view) {
          r.view = freezeBitArray(type[fieldsProp].$$tags.all);
        }

        if (!r.update) {
          r.update = freezeBitArray(type[fieldsProp].$$tags.all);
        }

        if (!r.required) {
          r.required = freezeBitArray(r.required || type[fieldsProp].$$tags.required);
        }
      }

      r.modify = _modify;
      return r; // (fields) ->
    } : function () {
      var allAccess;
      allAccess = {
        view: type[fieldsProp].$$calc('#all-options', {
          strict: false
        })._buildList(),
        update: type[fieldsProp].$$calc('(#all-#system),id,rev,deleted', {
          strict: false
        })._buildList()
      };

      if (addActions) {
        allAccess.required = type[fieldsProp].$$tags.required;
        allAccess.actions = type.actions.$$tags.all;
      }

      allAccess.modify = _modify;
      return function (doc) {
        return allAccess; // (type, fieldsProp, access) ->
      };
    }();
    return res;
  }; // ----------------------------


  module.exports = $$accessBuilder;
}).call(void 0);