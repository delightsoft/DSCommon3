"use strict";

// Generated by CoffeeScript 2.5.1
(function () {
  var _$$newBuilder, defaultInit;

  defaultInit = {
    string: '',
    text: '',
    "boolean": false,
    integer: 0,
    "double": 0
  }; //  decimal: '0'
  //  time:
  //  date:
  //  dateonly:
  //  timestamp:
  //  json:
  //  blob:
  //  uuid:
  //  enum:

  _$$newBuilder = function $$newBuilder(fields) {
    var field, i, len, newFuncs, ref;
    newFuncs = [];
    ref = fields.$$list;

    for (i = 0, len = ref.length; i < len; i++) {
      field = ref[i];

      (function () {
        var init, name;
        name = field.name;
        init = void 0;

        if (field.type === 'structure') {
          init = _$$newBuilder(field.fields);
        } else if (field.type === 'subtable') {
          if (field.required) {
            (function () {
              var $$new;
              $$new = field.fields.$$new;
              return init = function init() {
                return [$$new()];
              };
            })();
          } else {
            init = [];
          }
        } else if (field.hasOwnProperty('init')) {
          init = field.init;
        } else if (field["null"]) {
          init = null;
        } else if (defaultInit.hasOwnProperty(field.type)) {
          init = defaultInit[field.type];
        } else if (field.type === 'enum') {
          init = field["enum"].$$list[0].name;
        } else {
          init = null;
        }

        if (typeof init === 'function') {
          return newFuncs.push(function (res) {
            res[name] = init();
          });
        } else {
          return newFuncs.push(function (res) {
            res[name] = init;
          });
        }
      })();
    }

    return function () {
      var res;
      res = {};
      newFuncs.forEach(function (f) {
        f(res);
      });
      return res; // () ->
    };
  }; // ----------------------------


  module.exports = _$$newBuilder;
}).call(void 0);