"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// Generated by CoffeeScript 2.5.1
(function () {
  var $$newValidator, isResult, too;

  var _require = require('../../utils/_err');

  isResult = _require.isResult;
  too = _require.too;

  $$newValidator = function $$newValidator(fields, calcAccess) {
    return function (result, doc, updateMaskOrList) {
      var fieldsList;

      if (!isResult(result)) {
        invalidArg('result', result);
      }

      if (!(_typeof(doc) === 'object' && doc !== null && !Array.isArray(doc))) {
        invalidArg('doc', doc);
      }

      if (updateMaskOrList) {
        if (Array.isArray(updateMaskOrList)) {
          return fieldsList = updateMaskOrList;
        } else if (updateMaskOrList === 'object' && updateMaskOrList !== null && updateMaskOrList.hasOwnProperty('_map')) {
          return fieldsList = updateMaskOrList.list();
        } else {
          return invalidArg('updateMaskOrList', updateMaskOrList);
        }
      } else {
        return fieldsList = calcAccess(doc).update.list;
      }
    };
  }; // ----------------------------


  module.exports = $$newValidator;
}).call(void 0);