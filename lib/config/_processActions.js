"use strict";

// Generated by CoffeeScript 2.5.1
(function () {
  var Result, compileTags, processActions, sortedMap;
  Result = require('../result');
  sortedMap = require('../sortedMap');

  var _require = require('../tags');

  compileTags = _require.compile;

  processActions = function processActions(result, doc) {
    if (!doc.$$src.hasOwnProperty('actions')) {
      // processActions =
      return {
        $$list: [],
        $$tags: {}
      };
    }

    return result.context(Result.prop('actions'), function () {
      // processActions =
      var action, res;
      res = sortedMap(result, doc.$$src.actions, {
        index: true,
        getValue: function getValue(result, value, res) {
          if (typeof value === 'function') {
            // TODO: Check number of parameters in given function
            res.value = value;
            return true;
          }

          return false;
        }
      });

      if (!result.isError) {
        action = void 0;
        result.context(function (path) {
          return Result.item(action.name)(path);
        }, function () {
          var i, len, ref;
          ref = res.$$list;

          for (i = 0, len = ref.length; i < len; i++) {
            action = ref[i];

            if (action.hasOwnProperty('$$src')) {
              if (!action.$$src.hasOwnProperty('value')) {
                result.error('dsc.missingProp', {
                  value: 'value'
                });
              } else if (typeof action.$$src.value !== 'function') {
                result.error('dsc.invalidValue', {
                  value: action.$$src.value
                });
              } else {
                // TODO: Check number of parameters in given function
                action.value = action.$$src.value; // result.context
              }
            }
          }
        });
        compileTags(result, res);
        sortedMap.finish(result, res, {
          skipProps: ['tags']
        });

        if (!result.isError) {
          // processActions =
          return res;
        }
      }
    });
  }; // ----------------------------


  module.exports = processActions;
}).call(void 0);