"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// Generated by CoffeeScript 2.5.1
(function () {
  var Result, compile, invalidArg, isResult, processAPI, processDocs, processUdtypes, tooManyArgs;

  var _require = require('../utils');

  var _require$err = _require.err;
  tooManyArgs = _require$err.tooManyArgs;
  invalidArg = _require$err.invalidArg;
  isResult = _require$err.isResult;
  Result = require('../result');
  processUdtypes = require('./_processUdtypes');
  processDocs = require('./_processDocs');
  processAPI = require('./_processAPI'); // TODO: Add opts - to add DSValue implementations

  compile = function compile(result, sourceConfig) {
    var config;

    if (!isResult(result)) {
      invalidArg('result', result);
    }

    if (!(_typeof(sourceConfig) === 'object' && sourceConfig !== null)) {
      invalidArg('sourceConfig', sourceConfig);
    }

    if (!(arguments.length <= 2)) {
      tooManyArgs();
    }

    config = {
      $$src: sourceConfig
    };
    processUdtypes(result, config);
    processDocs(result, config);
    processAPI(result, config);

    if (!result.isError) {
      delete config.$$src;
      delete config.udtypes;
      return config; // compile =
    }
  }; // ----------------------------


  module.exports = compile;
  module.exports._processFields = require('./_processFields');
  module.exports._processActions = require('./_processActions');
  module.exports._processStates = require('./_processStates');
  module.exports._processUdtypes = require('./_processUdtypes');
}).call(void 0);